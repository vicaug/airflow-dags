name: Update PR Summary with AI Explanation

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  explain:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # precisamos do hist√≥rico para o diff

      - name: Get base commit of PR
        id: base
        run: echo "base_sha=${{ github.event.pull_request.base.sha }}" >> $GITHUB_OUTPUT

      - name: Get diff summary
        id: diff
        run: |
          git fetch origin ${{ github.event.pull_request.base.ref }}
          git diff --unified=0 origin/${{ github.event.pull_request.base.ref }}...HEAD > diff.txt
          head -c 12000 diff.txt > short_diff.txt  # limita o tamanho para a API
          echo "DIFF<<EOF" >> $GITHUB_ENV
          cat short_diff.txt >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Get explanation from ChatGPT
        id: ai
        run: |
          echo "Chamando OpenAI..."
          response=$(curl -s https://api.openai.com/v1/chat/completions \
            -H "Authorization: Bearer ${{ secrets.OPENAI_API_KEY }}" \
            -H "Content-Type: application/json" \
            -d '{
              "model": "gpt-4",
              "messages": [
                {
                  "role": "system",
                  "content": "Voc√™ √© um engenheiro de software experiente. Dado um diff de c√≥digo, explique em linguagem natural o que foi alterado e por qu√™."
                },
                {
                  "role": "user",
                  "content": "'"${DIFF}"'"
                }
              ],
              "temperature": 0.4
            }')
          echo "$response" > response.json
          explanation=$(jq -r '.choices[0].message.content' response.json)
          echo "EXPLANATION<<EOF" >> $GITHUB_ENV
          echo "$explanation" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Update PR with AI explanation
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pr = context.payload.pull_request;
            const explanation = process.env.EXPLANATION;

            const marker = '### ü§ñ Explica√ß√£o Autom√°tica (IA)';
            const newSection = `${marker}\n\n${explanation}`;
            let newBody;

            if (pr.body && pr.body.includes(marker)) {
              newBody = pr.body.split(marker)[0].trim() + '\n\n' + newSection;
            } else {
              newBody = (pr.body || '') + '\n\n' + newSection;
            }

            await github.rest.pulls.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pr.number,
              body: newBody
            });
